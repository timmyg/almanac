# The following types define the data model of the example service
# based on which the GraphQL API is generated

type Artist @model {
  id: ID! @isUnique
  name: String!
  tours: [Tour!]! @relation(name: "ArtistTours")
  guest: [SongPerformance!]! @relation(name: "SongPerformanceGuest")
}

type Tour @model {
  id: ID! @isUnique
  name: String!
  artist: Artist @relation(name: "ArtistTours")
  concerts: [Concert!]! @relation(name: "TourConcerts")
}

type Venue @model {
  id: ID! @isUnique
  name: String!
  location: Location  @relation(name: "VenueLocation")
  concerts: [Concert!]! @relation(name: "ConcertVenue")
}

type Location @model {
  id: ID! @isUnique
  city: String!
  region: String! # state/province
  country: String!
  venues: [Venue!]! @relation(name: "VenueLocation")
}

type Song @model {
  id: ID! @isUnique
  name: String!
  performances: [SongPerformance!]! @relation(name: "SongPerformances")
  short: String!
}

type SongPerformance @model {
  id: ID! @isUnique
  song: Song! @relation(name: "SongPerformances")
  concerts: [Concert!]! @relation(name: "ConcertSongPerformances")
  length: Int
  guests: [Artist!]! @relation(name: "SongPerformanceGuest")
  notes: String
}

type Concert @model {
  id: ID! @isUnique
  setlist: [SongPerformance!]! @relation(name: "ConcertSongPerformances")
  tour: Tour! @relation(name: "TourConcerts")
  venue: Venue! @relation(name: "ConcertVenue")
  start: DateTime!
  opener: Concert @relation(name: "ConcertOpener")
}
